{"version":3,"sources":["CustomSearch.js","CustomToolbar.js","App.js","index.js"],"names":["CustomSearch","props","state","ref","getStops","error","setSchedule","Autocomplete","id","loading","this","length","loadingText","options","onChange","event","value","getStopSchedule","getOptionLabel","option","nameWithDirection","getOptionDisabled","style","width","renderInput","params","TextField","label","variant","console","log","fetch","then","res","json","React","Component","CustomToolbar","AppBar","position","Toolbar","edge","marginRight","Typography","flexGrow","stopsSort","stops","sort","a","b","localeCompare","i","stopsJsonToArray","stopsJson","stop","push","App","schedule","distanceRemaining","setState","isTrams","tramStops","trolleyStops","getTrolleyColor","getTramColor","className","styles","root","Container","maxWidth","marginTop","marginBottom","Paper","elevation","padding","Grid","container","direction","justify","paddingBottom","color","Divider","alignItems","IconButton","margin","onClick","aria-label","fontSize","TableContainer","component","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","tmp","key","name","scope","timeRemaining","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.320bd32a.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default class CustomSearch extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ref:this.props.ref,\n            getStops: this.props.getStops,\n            error:false,\n            setSchedule:this.props.setSchedule\n        };\n    }\n\n    render() {\n        return (\n            <Autocomplete\n                id=\"search\"\n                loading={this.state.getStops().length===0}\n                loadingText={\"Загрузка...\"}\n                options={this.state.getStops()}\n                onChange={(event, value) => this.getStopSchedule(value)}\n                getOptionLabel={option => option.nameWithDirection}\n                getOptionDisabled={option => option.id===-1}//loading option is disabled\n                style={{width: \"100%\"}}\n                renderInput={params => <TextField {...params} error ={this.state.error} label=\"Остановка\" variant=\"outlined\"/>}\n            />\n        );\n    }\n\n    getStopSchedule(value) {\n        console.log(value);\n        if(value!=null) {\n            //todo loading icon on the bottom of the card\n            fetch(\"https://ettu-schedule.herokuapp.com/transport-near-stops/\" + value.id)\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res);\n                    this.state.setSchedule(res);\n                    //todo process errors\n                    //todo show error dialog\n                    /*if(res.length!==0&&res.name!==\"error\")\n                        this.state.setSchedule(res);\n                    else\n                    {\n\n                    }*/\n                });\n        }\n    }\n}\n","import ScheduleIcon from \"@material-ui/icons/EventNoteTwoTone\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nexport default class CustomToolbar extends React.Component{\n\n    render() {\n        return <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <ScheduleIcon edge=\"start\" style={{marginRight: 16}}/>\n                <Typography variant=\"h6\" style={{flexGrow:1}}>\n                    Ettu Schedule\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    }\n}","import React from 'react';\nimport styles from './App.css';\nimport CustomSearch from \"./CustomSearch\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport TramIcon from '@material-ui/icons/TramTwoTone';\nimport TrolleybusIcon from '@material-ui/icons/DirectionsBusTwoTone';\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {TableContainer} from \"@material-ui/core\";\nimport CustomToolbar from \"./CustomToolbar\"\n\nfunction stopsSort(stops) {\n    stops.sort(function (a, b) {\n        return a.nameWithDirection.localeCompare(b.nameWithDirection)\n    });\n    for (let i = 0; i < stops.length; i++)\n        console.log(stops[i].id + \": \" + stops[i].nameWithDirection);\n    return stops;\n}\n\nfunction stopsJsonToArray(stopsJson) {\n    let stops = [];\n    for (let i = 0, stop; i < stopsJson.length; i++) {\n        stop = stopsJson[i];\n        stops.push(stop);\n    }\n    return stops;\n}\n\nconst loading = [];\n\nexport default class App extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tramStops: null,\n            trolleyStops: null,\n            isTrams: true, //trams or trolleys\n            schedule: []\n        };\n    }\n\n    componentDidMount() {\n\n        fetch(\"https://ettu-schedule.herokuapp.com/tram-stops\")\n            .then(res => res.json())\n            .then(res => stopsJsonToArray(res))\n            .then(res => stopsSort(res))\n            .then(res => this.setState({tramStops: res}));\n\n        fetch(\"https://ettu-schedule.herokuapp.com/trolley-stops\")\n            .then(res => res.json())\n            .then(res => stopsJsonToArray(res))\n            .then(res => stopsSort(res))\n            .then(res => this.setState({trolleyStops: res}));\n    }\n\n    setSchedule = (schedule) => {\n        schedule.sort(function (a, b) {\n                return a.distanceRemaining.localeCompare(b.distanceRemaining);\n            }\n        );\n        console.log(schedule);\n        this.setState({schedule: schedule});\n        //todo debug when no schedule\n        /*let tmp = [{\"name\": \"5\", \"timeRemaining\": \"0\", \"distanceRemaining\": \"100\"},\n            {\"name\": \"6\", \"timeRemaining\": \"0\", \"distanceRemaining\": \"200\"},\n            {\"name\": \"5\", \"timeRemaining\": \"1\", \"distanceRemaining\": \"10\"},\n            {\"name\": \"5\", \"timeRemaining\": \"0\", \"distanceRemaining\": \"300\"}];\n\n        tmp.sort(function (a, b) {\n                return a.distanceRemaining.localeCompare(b.distanceRemaining);\n            }\n        );\n        console.log(\"set set set\");\n        console.log(tmp);\n        this.setState({schedule: tmp});*/\n    };\n\n    getStops = () => {\n        if (this.state.isTrams) {\n            if (this.state.tramStops == null)\n                return loading;\n            return this.state.tramStops;\n        } else {\n            if (this.state.trolleyStops == null)\n                return loading;\n            return this.state.trolleyStops;\n        }\n    };\n\n    getTrolleyColor = () => {\n        return this.state.isTrams ? \"default\" : \"primary\";\n    };\n\n    getTramColor = () => {\n        return this.state.isTrams ? \"primary\" : \"default\";\n    };\n\n    //todo refactor\n    //todo split in classes\n    //todo replace margins with custom theme\n    //todo custom THEME (colors, spacing, etc)\n    //todo !!! react clear search when transport type choosed using createRef\n    render() {\n        return (\n            <div className={styles.root}>\n                <CustomToolbar/>\n                <Container maxWidth=\"sm\" style={{marginTop: 16, marginBottom: 16}}>\n                    <Paper elevation={2} style={{padding: 16}}>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Typography variant=\"h4\" style={{paddingBottom: 8}}>\n                                Где {this.state.isTrams ? \"трамвай\" : \"троллейбус\"}?\n                            </Typography>\n                            <Typography color=\"textSecondary\" variant=\"body1\" style={{paddingBottom: 16}}>\n                                Выберите интересующий вас тип транспорта, а затем введите остановку.\n                            </Typography>\n                            <Divider variant=\"middle\"/>\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n\n                                <IconButton style={{margin: 8}} onClick={() => {\n                                    this.setState({isTrams: true});\n                                }}\n                                            color={this.getTramColor()}\n                                            aria-label=\"Трамвай\">\n                                    <TramIcon fontSize=\"large\"/>\n                                </IconButton>\n                                <IconButton style={{margin: 8}} onClick={() => {\n                                    this.setState({isTrams: false});\n                                }\n                                }\n                                            color={\n                                                this.getTrolleyColor()} aria-label=\"Троллейбус\">\n                                    <TrolleybusIcon fontSize=\"large\"/>\n                                </IconButton>\n                            </Grid>\n                            <Divider variant=\"middle\"/>\n                            <Grid style={{marginTop: 16}} container direction=\"row\" justify=\"center\"\n                                  alignItems=\"stretch\">\n                                <CustomSearch setSchedule={this.setSchedule} getStops={this.getStops}/>\n                            </Grid>\n                        </Grid>\n                    </Paper>\n                    {\n                        this.state.schedule.length === 0\n                            ? \"\"\n                            : <TableContainer component={Paper} elevation={2} style={{marginTop: 16}}>\n                                <Table aria-label=\"schedule table\" size=\"small\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>№</TableCell>\n                                            <TableCell align=\"right\">Время ожидания (мин)</TableCell>\n                                            <TableCell align=\"right\">Расстояние до остановки (м)</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {this.state.schedule.map(tmp => (\n                                            <TableRow key={tmp.name}>\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    {tmp.name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">{tmp.timeRemaining}</TableCell>\n                                                <TableCell align=\"right\">{tmp.distanceRemaining}</TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>}\n                </Container>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}